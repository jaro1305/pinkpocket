1. create new android project
2. Add static dynamic loader for the library, and the native method call:

    static {
        System.loadLibrary("bioaid"); // "libbioaid.so"
    }

    public native String getMessage();

3. clean/build/run the project (expect running to fail as we don't have the native stuff set up!)
4. create directory <project directory>/jni/include
5. cd to <project directory>/jni/include
6. run:

javah -classpath ../../bin/classes:/home/james/android-sdk-linux_r21/platforms/android-14/android.jar -o BioAidJNI.hpp com.soundbyte.app.MainActivity
(replace : with ; on Windows, maybe update android-14, replace /home/james/android-sdk-linux_r21 with your Android SDK path, and replace com.soundbyte.app.MainActivity with the full name of your Activity)

7. copy the .h file created in that directory to a .hpp file, and then create a file BioAidJNI.cpp under <project directory>/jni directory with the content:

#include <jni.h>
#include "include/BioAidJNI.hpp"

JNIEXPORT jstring JNICALL Java_com_soundbyte_app_MainActivity_getMessage
          (JNIEnv *env, jobject thisObj) {
   return env->NewStringUTF("Hello from native code!");
}
(replace com_soundbyte_app_MainActivity with the full name of your Activity)

8. create a file Android.mk under <project directory>/jni directory with the content:

LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)

LOCAL_MODULE := bioaid
LOCAL_SRC_FILES := BioAidJNI.cpp

include $(BUILD_SHARED_LIBRARY)

9. cd to <project directory>
10. run:

<ndk dir>/ndk-build V=1 -B
(I was using NDK 9)

11. clean/build/run the android app (it should work and show Hello from native code!)
12. Copy/paste main.cpp into BioAidJNI.cpp
13. Remove all the parameters from the main method, and then add this line before the return statement in the ..._getMessage method:

main();

Also add these lines below the imports:

extern "C" {
    void showData(const float* L, const float*R, int numel);
    int main();
}

14. Delete main.cpp
15. Run ndk-build again (see step 10); you should get a fatal error because of boost (see http://stackoverflow.com/questions/14036311/official-boost-library-support-for-android-and-ios and especially http://www.codexperiments.com/android/2011/05/tips-tricks-building-boost-with-ndk-r5/ for how I tackled boost issues. Also see http://www.boost.org/doc/libs/1_54_0/more/getting_started/unix-variants.html)
16. Download boost from http://www.boost.org/
17. Extract boost to <ndk dir>/sources/ so that in <ndk dir>/sources/boost-1_54_0/ you have subdirectories like doc, libs, status, tools...
18. Edit <ndk dir>sources/boost-1_54_0/tools/build/v2/user-config.jam (which is full of commented lines) to have the following content:

    import os ;  
      
    if [ os.name ] = CYGWIN || [ os.name ] = NT  
    {  
        androidPlatform = windows ;  
    }  
    else if [ os.name ] = LINUX  
    {  
        androidPlatform = linux-x86 ;  
    }  
    else if [ os.name ] = MACOSX  
    {  
        androidPlatform = darwin-x86 ;  
    }  
    modules.poke : NO_BZIP2 : 1 ;  
    ANDROID_NDK = /home/james/android-ndk-r9 ;  
    using gcc : android4.8 :  
    $(ANDROID_NDK)/toolchains/arm-linux-androideabi-4.8/prebuilt/$(androidPlatform)/bin/arm-linux-androideabi-g++ :  
    <compileflags>--sysroot=$(ANDROID_NDK)/platforms/android-14/arch-arm  
    <compileflags>-mthumb  
    <compileflags>-Os  
    <compileflags>-fno-strict-aliasing  
    <compileflags>-O2  
    <compileflags>-DNDEBUG  
    <compileflags>-g  
    <compileflags>-lstdc++  
    <compileflags>-I$(ANDROID_NDK)/sources/cxx-stl/gnu-libstdc++/4.8/include  
    <compileflags>-I$(ANDROID_NDK)/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include  
    <compileflags>-D__GLIBC__  
    <compileflags>-DBOOST_NO_INTRINSIC_WCHAR_T
    <compileflags>-DBOOST_NO_STD_WSTRING
    <archiver>$(ANDROID_NDK)/toolchains/arm-linux-androideabi-4.8/prebuilt/$(androidPlatform)/bin/arm-linux-androideabi-ar  
    <ranlib>$(ANDROID_NDK)/toolchains/arm-linux-androideabi-4.8/prebuilt/$(androidPlatform)/bin/arm-linux-androideabi-ranlib  
    ;
(update ANDROID_NDK to <ndk dir> without a trailing slash, and *CHECK* that all the paths referenced in this file actually exist! Especially all the references to 4.8...)
(maybe update android-14)
(maybe use armeabi instead of armeabi-v7a?)
(maybe use armeabi-v7a/include/bits instead of armeabi-v7a/include?)
(    <compileflags>-DBOOST_NO_STD_WSTRING    may be needed for some builds???)
(    <compileflags>-DBOOST_NO_INTRINSIC_WCHAR_T    may be needed for some builds???)

19. cd <ndk dir>/sources/boost-1_54_0
20. In order to create bjam in <ndk dir>, run:

./bootstrap.sh

21. Apply the fix on https://svn.boost.org/trac/boost/ticket/8816 to the block starting at line 76 of <ndk dir>/sources/boost-1_54_0/libs/filesystem/src/operations.cpp unless it's already been applied in a version after 1.54.0
22. Apply the fix on https://svn.boost.org/trac/boost/ticket/8961 to the block starting at line 57 of <ndk dir>/sources/boost-1_54_0/libs/log/src/threadsafe_queue.cpp unless it's already been applied in a version after 1.54.0
23. Run:

./b2 --clean --without-python --without-serialization toolset=gcc-android4.8 link=static runtime-link=static target-os=linux --stagedir=android
./b2 -a --without-python --without-serialization toolset=gcc-android4.8 link=static runtime-link=static target-os=linux --stagedir=android
(See the notes for step 18 to resolve issues, especially for <compileflags>-DBOOST_NO_STD_WSTRING)
(Maybe try http://www.crystax.net/en/android/ndk for wide char support?)

24. Check that there are no failures or skips, and the message "The Boost C++ Libraries were successfully built!" is displayed, and all the libs are in <ndk dir>/sources/boost_1_54_0/android/lib
25. Change the <project directory>/jni/Android.mk file to the following:

LOCAL_PATH := $(call my-dir)
include $(call all-subdir-makefiles)

include $(CLEAR_VARS)

LOCAL_LDLIBS := -llog -ldl
LOCAL_MODULE    := bioaid
LOCAL_SRC_FILES := BioAidJNI.cpp
LOCAL_CPP_FLAGS := -felide-constructors
LOCAL_STATIC_LIBRARIES := boost_atomic boost_chrono boost_context boost_coroutine boost_date_time boost_exception boost_filesystem boost_graph boost_iostreams boost_log boost_log_setup boost_math_c99 boost_math_c99f boost_math_c99l boost_math_tr1 boost_math_tr1f boost_math_tr1l boost_prg_exec_monitor boost_program_options boost_random boost_regex boost_signals boost_system boost_test_exec_monitor boost_thread boost_timer boost_unit_test_framework boost_wave

include $(BUILD_SHARED_LIBRARY)
$(call import-module,boost_1_54_0)

26. Create <project directory>/jni/Application.mk with the following content:

APP_STL      = gnustl_static #(or APP_STL = stlport_static as required)
APP_CPPFLAGS = -fexceptions
APP_GNUSTL_FORCE_CPP_FEATURES = exceptions rtti

27. Create <ndk dir>/sources/boost-1_54_0/Android.mk with the following content:

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_atomic
LOCAL_SRC_FILES:= android/lib/libboost_atomic.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_chrono
LOCAL_SRC_FILES:= android/lib/libboost_chrono.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_context
LOCAL_SRC_FILES:= android/lib/libboost_context.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_coroutine
LOCAL_SRC_FILES:= android/lib/libboost_coroutine.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_date_time
LOCAL_SRC_FILES:= android/lib/libboost_date_time.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_exception
LOCAL_SRC_FILES:= android/lib/libboost_exception.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_filesystem
LOCAL_SRC_FILES:= android/lib/libboost_filesystem.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_graph
LOCAL_SRC_FILES:= android/lib/libboost_graph.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_iostreams
LOCAL_SRC_FILES:= android/lib/libboost_iostreams.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_log
LOCAL_SRC_FILES:= android/lib/libboost_log.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_log_setup
LOCAL_SRC_FILES:= android/lib/libboost_log_setup.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_math_c99
LOCAL_SRC_FILES:= android/lib/libboost_math_c99.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_math_c99f
LOCAL_SRC_FILES:= android/lib/libboost_math_c99f.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_math_c99l
LOCAL_SRC_FILES:= android/lib/libboost_math_c99l.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_math_tr1
LOCAL_SRC_FILES:= android/lib/libboost_math_tr1.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_math_tr1f
LOCAL_SRC_FILES:= android/lib/libboost_math_tr1f.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_math_tr1l
LOCAL_SRC_FILES:= android/lib/libboost_math_tr1l.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_prg_exec_monitor
LOCAL_SRC_FILES:= android/lib/libboost_prg_exec_monitor.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_program_options
LOCAL_SRC_FILES:= android/lib/libboost_program_options.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_random
LOCAL_SRC_FILES:= android/lib/libboost_random.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_regex
LOCAL_SRC_FILES:= android/lib/libboost_regex.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_signals
LOCAL_SRC_FILES:= android/lib/libboost_signals.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_system
LOCAL_SRC_FILES:= android/lib/libboost_system.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_test_exec_monitor
LOCAL_SRC_FILES:= android/lib/libboost_test_exec_monitor.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_thread
LOCAL_SRC_FILES:= android/lib/libboost_thread.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_timer
LOCAL_SRC_FILES:= android/lib/libboost_timer.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_unit_test_framework
LOCAL_SRC_FILES:= android/lib/libboost_unit_test_framework.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

LOCAL_PATH:= /home/james/android-ndk-r9/sources/boost_1_54_0
include $(CLEAR_VARS)
LOCAL_MODULE := boost_wave
LOCAL_SRC_FILES:= android/lib/libboost_wave.a
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
include $(PREBUILT_STATIC_LIBRARY)

(note that there must be NO SPACES after the trailing slashes \, and you may need to alter the paths of the libs)
(see this for LOCAL_C_INCLUDES: http://stackoverflow.com/questions/14352397/boost-android-ndk-build-doesnt-create-so-headers-cant-be-found)
(see http://www.kandroid.org/ndk/docs/ANDROID-MK.html for the format)
(replace LOCAL_PATH with an appropriate one)

28. Delete obj and libs directories in <project directory> directory - you should do this for every build
29. cd to <project directory>
30. run:

<ndk dir>/ndk-build V=1 -B

(See this for a possible shared_ptr fix: http://stackoverflow.com/questions/4347151/how-to-use-the-boost-library-including-shared-ptr-with-the-android-ndk-and-stl)
